Name: lmdb
Version: 0.2.5
Synopsis: Lightning MDB bindings
Category: Database
Description:
  LMDB is a read-optimized Berkeley DB replacement developed by Symas
  for the OpenLDAP project. LMDB has impressive performance characteristics
  and a friendly BSD-style OpenLDAP license. See <http://symas.com/mdb/>.
  .
  This library has Haskell bindings to the LMDB library. By default, this
  library installs a bundled version of LMDB, so you do not need to install
  LMDB yourself beforehand. Currently, version 0.9.29 of LMDB is bundled.
  Alternatively, you can make this library link against your system's version
  of LMDB via @pkg-config@ by enabling the @-fpkg-config@ @cabal@ flag. (For
  instance, you can install LMDB on Ubuntu with @apt-get install liblmdb-dev@.)
  .
  For now, only a low level interface is provided, and the author is moving
  on to use LMDB rather than further develop its bindings. If a higher level
  API is desired, please consider contributing, or develop a separate package.

Author: David Barbour
Maintainer: Ryan Scott <rscott@galois.com>
Homepage: http://github.com/GaloisInc/lmdb

Package-Url:
Copyright: (c) 2014 by David Barbour, (c) 2023 Galois, Inc.
License: BSD2
license-file: LICENSE
Stability: experimental
build-type: Simple
cabal-version: 1.16.0.3
extra-source-files:
  README.md
  cbits/lmdb.h cbits/mdb.c cbits/midl.c cbits/midl.h
tested-with:
  GHC==8.10.7,
  GHC==9.0.2,
  GHC==9.2.7,
  GHC==9.4.5,
  GHC==9.6.2

Source-repository head
  type: git
  location: https://github.com/GaloisInc/lmdb
  subdir: lmdb

flag pkg-config
  default:     False
  manual:      True
  description: Use @pkg-config(1)@ to locate foreign @zlib@ library.

Library
  hs-Source-Dirs: hsrc_lib
  default-language: Haskell2010
  Build-Depends: base (>= 4.6 && < 5), array
  Build-Tools: hsc2hs

  Exposed-Modules:

    Database.LMDB.Raw

  Other-Modules:

  if flag(pkg-config)
    pkgconfig-depends: lmdb
  else
    include-dirs: cbits
    install-includes: lmdb.h midl.h
    c-sources: cbits/mdb.c cbits/midl.c

  -- GHC 9.4.5, 9.6.1, and 9.6.2 on Windows do not link against mingwex, but
  -- lmdb implicitly depends on this library due to its use of _GNU_SOURCE,
  -- which implies mingwex on Windows. To avoid linker errors in the absence of
  -- a mingwex dependency (see https://gitlab.haskell.org/ghc/ghc/-/issues/23533
  -- for an example of this), we depend on mingwex explicitly here.
  --
  -- Other versions of GHC on Windows already depend on mingwex, so we guard
  -- this behind appropriate conditionals.
  if os(windows)
    if (impl(ghc >= 9.4.5) && !impl(ghc >= 9.4.6)) || (impl(ghc >= 9.6.1) && !impl(ghc >= 9.6.3))
      extra-libraries: mingwex

  ghc-options: -Wall

